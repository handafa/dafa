<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.dafa.group.mapper.GroupMapper">
	<resultMap id="BaseResultMap" type="cn.dafa.group.model.Group">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="group_id" property="groupId" jdbcType="VARCHAR" />
		<result column="group_name" property="groupName" jdbcType="VARCHAR" />
		<result column="father_node" property="fatherNode" jdbcType="INTEGER" />
		<result column="father_name" property="fatherName" jdbcType="INTEGER" />
		<result column="if_father" property="ifFather" jdbcType="INTEGER" />
		<result column="weight" property="weight" jdbcType="INTEGER" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="updater" property="updater" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, group_id, group_name, father_node, if_father, weight,
		note,status,create_time,creater,update_time,updater
	</sql>

	<sql id="Sql_Where_Clause">
		where status=1
		<choose>
			<when test="groupName!=null">
				and group_name like #{groupName,jdbcType=VARCHAR}
			</when>
			<when test="fatherNode!=null">
				and father_node = #{fatherNode,jdbcType=INTEGER}
			</when>
		</choose>
		order by weight
	</sql>

	<select id="select" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT a.id, a.group_id, a.group_name,
		a.father_node,a.if_father,a.weight, a.note,( SELECT
		b.group_name FROM
		t_sys_groups b WHERE a.father_node = b.id ) AS
		father_name FROM
		t_sys_groups a WHERE a.id = #{id,jdbcType=INTEGER}
	</select>

	<select id="query" resultMap="BaseResultMap" resultType="cn.dafa.group.model.Group"
		parameterType="cn.dafa.common.pojo.Criteria">
		select
		<include refid="Base_Column_List" />
		from t_sys_groups
		<include refid="Sql_Where_Clause" />
		LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
	</select>

	<select id="count" resultType="java.lang.Long" parameterType="cn.dafa.common.pojo.Criteria">
		select count(1) from t_sys_groups
		<include refid="Sql_Where_Clause" />
	</select>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from
		t_sys_groups
		where
		id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="save" parameterType="cn.dafa.group.model.Group">
		insert into t_sys_groups (
		group_id, group_name,
		father_node, if_father, weight,
		note,status,create_time,creater,update_time,updater)
		values
		(#{groupId,jdbcType=VARCHAR},
		#{groupName,jdbcType=VARCHAR},
		#{fatherNode,jdbcType=INTEGER},
		0,
		#{weight,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR},1,now(),#{creater,jdbcType=VARCHAR},now(),#{updater,jdbcType=VARCHAR})
	</insert>

	<update id="modify" parameterType="cn.dafa.group.model.Group">
		update t_sys_groups
		<set>
			<if test="2 != 1">
				update_time = now(),updater = now(),
			</if>
			<if test="groupId != null">
				group_id = #{groupId,jdbcType=VARCHAR},
			</if>
			<if test="groupName != null">
				group_name = #{groupName,jdbcType=VARCHAR},
			</if>
			<if test="fatherNode != null">
				father_node = #{fatherNode,jdbcType=INTEGER},
			</if>
			<if test="ifFather != null">
				if_father = #{ifFather,jdbcType=INTEGER},
			</if>
			<if test="weight != null">
				weight = #{weight,jdbcType=INTEGER},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 根据父节点查出所有的组织 -->
	<select id="findGroups" parameterType="java.lang.Integer"
		resultMap="BaseResultMap" resultType="cn.dafa.group.model.Group">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		t_sys_groups where status=1 and father_node =
		#{fatherNode} order by weight;
	</select>

	<!-- 更改父节点的状态 -->
	<update id="updateIfFather" parameterType="java.lang.Integer">
		update t_sys_groups
		set
		if_father = 1 where id = #{fatherNode}
	</update>

	<!-- 查询孩子的数目状态 -->
	<select id="countChildrenNum" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(1) from t_sys_groups where father_node =
		#{fatherNode} and status=1
	</select>

	<!-- 根据孩子节点的id求出该父节点的孩子数目 -->
	<select id="countChildrenNumByChild" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		SELECT COUNT(1) FROM t_sys_groups WHERE status = 1 AND
		father_node = (
		SELECT father_node
		FROM t_sys_groups WHERE status = 1
		AND
		id =
		#{id} )
	</select>


	<select id="findGroupsMaxGroupId" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		SELECT
		IFNULL(RIGHT(max(group_id),3), 0)
		FROM
		t_sys_groups
		WHERE
		father_node = #{fatherNode}
	</select>

	<select id="findFatherGroupId" resultType="java.lang.String"
		parameterType="java.lang.Integer">
		select DISTINCT IFNULL(group_id,'') from t_sys_groups
		where
		id=#{fatherNode}
	</select>

	<select id="countGroupsByFather" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select IFNULL(count(1),0) from t_sys_groups where
		father_node=#{fatherNode}
	</select>

	<!-- 一次获取所有的组织 -->
	<select id="findAllGroups" resultMap="BaseResultMap" resultType="cn.dafa.group.model.Group">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		t_sys_groups where status=1 order by father_node,weight;
	</select>
</mapper>